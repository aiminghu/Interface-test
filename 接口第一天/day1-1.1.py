#！ /usr/bin/env python
# -*- coding: utf-8 -*-
# @Time : 2019/10/12 0012 下午 15:44 
# @Author : aiminhu
# @File : day1-1.1.py 
# @Software: PyCharm

'''
预习：面向对象的类，属性，方法，对象，实例化
类（Class）：用来描述具有相同属性和方法的对象的集合。定义了该集合中每个对象所共有的属性和方法。对象是类的实例。
方法：类中定义的函数。
类变量：在整个实例化的对象中是公用的。类变量定义在类中且在函数体之外。通常不作为实例变量使用
数据成员：类变量或者实例变量用于处理类以及其实例对象的相关的数据
方法重写：如果从父类继承的方法不能满足子类的需求，可以对其进行改写，这个的过程叫方法的覆盖（override），也称方法的重写。
局部变量：定义在方法中的变量，只作用于当前实例的类。
实例变量：在类的声明中，属性是用变量来表示的。这种变量就是
继承：即一个派生类（derived class）继承基类（base class）的字段和方法。继承也允许把一个派生类的对象作为基类来对待。
实例化：创建一个类的实例，类的具体对象。
对象：通过类定义的数据结构实例。对象包括两个数据成员（类变量和实例变量）和方法
'''
#语法&&一个实例
#语法
'''
类对象支持两种操作：1.属性引用 2.实例化
class ClassName:
    <statement-1>
    .
    .
    .
    <statement-N>
'''
class Myclass:
    """定义一个类"""
    i = 12345
    def f(self):
        return "Hello world!"
#实例化类
x = Myclass()

#访问类的属性和方法
print("Myclass")
